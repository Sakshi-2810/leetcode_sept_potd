/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL) return NULL;
        map<Node*,Node*>m;
        Node* temp1=head;
        Node* ans=new Node(head->val);
        Node* temp2=ans;
        while(temp1!=NULL)
        {
            m[temp1]=temp2;
            temp1=temp1->next;
            if(temp1!=NULL)
            {
                Node* newn=new Node(temp1->val);
                temp2->next=newn;
            }
            temp2=temp2->next;
        }
        temp1=head;
        temp2=ans;
        while(temp1!=NULL)
        {
            temp2->random=m[temp1->random];
            temp1=temp1->next;
            temp2=temp2->next;
        }
        return ans;
    }
};
